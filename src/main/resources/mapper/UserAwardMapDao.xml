<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.weilai.o2o.dao.UserAwardMapDao">
	<resultMap id="userAwardResultMap" type="com.weilai.o2o.entity.UserAwardMap">
		<!-- 主键 -->
		<id column="user_award_id" property="userAwardId" />
		<!--column对应库表中的字段名 property对应实体类中的属性名 -->
		<result column="point" property="point"/>
		<result column="create_time" property="createTime" />
		<result column="used_status" property="usedStatus" />

		<!-- 复合对象 property是指在award实体类的属性，column是所引用对象的对应属性 -->
		<association column="user_id" property="user" javaType="com.weilai.o2o.entity.PersonInfo">
			<id column="user_id" property="userId" />
			<result column="name" property="name" />
		</association>
		
				
		<association column="operator_id" property="operator" javaType="com.weilai.o2o.entity.PersonInfo">
			<id column="user_id" property="userId" />
			<result column="name" property="name" />
		</association>
		
		<association column="award_id" property="award" javaType="com.weilai.o2o.entity.Award">
			<id column="award_id" property="awardId" />
			<result column="award_name" property="awardName" />
		</association>

		<association property="shop" column="shop_id" javaType="com.weilai.o2o.entity.Shop">
			<id column="shop_id" property="shopId" />
			<result column="shop_name" property="shopName" />
		</association>
	</resultMap>

	<select id="queryAwardList" resultMap="userAwardResultMap">
		select
		  uam.user_award_id,
		  uam.point,
		  uam.create_time,
		  uam.used_status,
		  s.shop_id,
		  s.shop_name,
		  a.award_id,
		  a.award_name,
		  buyer.user_id,
		  buyer.name,
		  operator.user_id AS operator_id,
		  operator.name
		 from 
		  	tb_award a,
		 	tb_user_award_map uam,
		 	tb_person_info buyer,
		 	tb_shop s,
		 	tb_person_info operator
		 
		 <where>
		 	uam.user_id=buyer.user_id
		 	and uam.shop_id=s.shop_id
		 	and uam.award_id=a.award_id
		 	and uam.user_id=operator.user_id
		 	<!-- 按顾客名字模糊查询 -->
		   <if test="userAwardCondition.user != null and userAwardCondition.user.name!= null">
			and buyer.name like '%${userAwardCondition.user.name}%'
			</if>
			<!-- 按顾客信息精确查询  -->
			<if test="userAwardCondition.user !=null and userAwardCondition.user.userId !=null">
				and uam.user_id = #{userAwardCondition.user.userId}
			</if>
			<!-- 按某个店铺精确查询 -->
			<if test="userAwardCondition.shop !=null and userAwardCondition.shop.shopId !=null">
				and uam.shop_id = #{userAwardCondition.shop.shopId}
			</if>
			<!-- 按某奖品名模糊查询 -->
			<if test="userAwardCondition.award !=null and userAwardCondition.award.awardName !=null">
				and a.award_name like '%${userAwardCondition.award.awardName}%'
			</if>
			<!-- 按奖品可用状态查询  -->
			<if test="userAwardCondition.award !=null and userAwardCondition.award.enableStatus !=null">
				and a.enable_status = #{userAwardCondition.award.enableStatus}
			</if>
		  </where>
		  	ORDER BY uam.create_time DESC
		 	LIMIT #{rowIndex} , #{pageSize}
	</select>
	
	<select id="queryCount" resultType="Integer">
		select count(1)
		from 
			tb_award a,
		 	tb_user_award_map uam,
		 	tb_person_info buyer,
		 	tb_shop s,
		 	tb_person_info operator
		 <where>
		 	uam.user_id=buyer.user_id
		 	and uam.shop_id=s.shop_id
		 	and uam.award_id=a.award_id
		 	and uam.user_id=operator.user_id
		 	<!-- 按顾客名字模糊查询 -->
		   <if test="userAwardCondition.user != null and userAwardCondition.user.userName!= null">
			and buyer.name like '%${userAwardCondition.user.name}%'
			</if>
			<!-- 按顾客信息精确查询  -->
			<if test="userAwardCondition.user !=null and userAwardCondition.user.userId !=null">
				and uam.user_id = #{userAwardCondition.user.userId}
			</if>
			<!-- 按某个店铺精确查询 -->
			<if test="userAwardCondition.shopId !=null">
				and uam.shop_id = #{userAwardCondition.shop.shopId}
			</if>
			<!-- 按某奖品名模糊查询 -->
			<if test="userAwardCondition.award.awardName !=null">
				and a.award_name like '%${userAwardCondition.award.awardName}%'
			</if>
			<!-- 按奖品可用状态查询  -->
			<if test="userAwardCondition.award !=null and userAwardCondition.award.enableStatus !=null">
				and a.enable_status = #{userAwardCondition.award.enableStatus}
			</if>
		  </where>
	
	</select>
	
	
	<select id="queryUserAwardMapByid" parameterType="long" resultMap="userAwardResultMap">
		select 
		uam.user_award_id,
		  uam.point,
		  uam.create_time,
		  uam.used_status,
		  s.shop_id,
		  s.shop_name,
		  a.award_id,
		  a.award_name,
		  buyer.user_id,
		  buyer.name,
		  operator.user_id AS operator_id,
		  operator.name
		 from 
		  	tb_award a,
		 	tb_user_award_map uam,
		 	tb_person_info buyer,
		 	tb_shop s,
		 	tb_person_info operator
		 
		 <where>
		 	uam.user_id=buyer.user_id
		 	and uam.shop_id=s.shop_id
		 	and uam.award_id=a.award_id
		 	and uam.user_id=operator.user_id
			and user_award_id = #{usedAwardId}
		</where>
	</select>
	
	<insert id="insertUserAwardMap" useGeneratedKeys="true" keyProperty="userAwardId"
		keyColumn="user_award_id">
	   insert into tb_user_award_map
	   ( user_id,award_id,shop_id,operator_id,create_time,used_status,point
		  )	  
		 values
		 (#{user.userId},#{award.awardId},#{shop.shopId},#{operator.userId},#{createTime},#{usedStatus},#{point})
	
	</insert>
	
	<update id="updateUserAwardMap">
	update tb_user_award_map
		set
		used_status=#{usedStatus}
		where user_award_id=#{userAwardId} and user_id=#{user.userId}
	</update>

	
	
</mapper>